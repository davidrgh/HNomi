// <auto-generated />
using System;
using HNomi.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HNomi.Migrations
{
    [DbContext(typeof(HNomiContext))]
    [Migration("20190619200044_Turno-trabajo")]
    partial class Turnotrabajo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HNomi.Entities.DetallesTipoNominaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EsPorUnidad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("NominaId");

                    b.Property<double>("Precio");

                    b.Property<bool>("TieneRetencion")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.ToTable("DetallesTipoNomina");
                });

            modelBuilder.Entity("HNomi.Entities.ImpuestosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("NominaId");

                    b.Property<double>("Porcentaje")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("HNomi.Entities.TipoNominaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Nocturnidad");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposNomina");
                });

            modelBuilder.Entity("HNomi.Entities.TurnosTrabajoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EsTurnoPartido")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("HoraDesdeTurno1");

                    b.Property<DateTime>("HoraDesdeTurno2");

                    b.Property<DateTime?>("HoraHastaTurno1");

                    b.Property<DateTime?>("HoraHastaTurno2");

                    b.HasKey("Id");

                    b.ToTable("TurnosTrabajo");
                });

            modelBuilder.Entity("HNomi.Entities.DetallesTipoNominaEntity", b =>
                {
                    b.HasOne("HNomi.Entities.TipoNominaEntity", "Nomina")
                        .WithMany("Detalles")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HNomi.Entities.ImpuestosEntity", b =>
                {
                    b.HasOne("HNomi.Entities.TipoNominaEntity", "Nomina")
                        .WithMany("Impuestos")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
